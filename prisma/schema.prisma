generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  image         String?
  emailVerified DateTime?
  active        Boolean   @default(true)
  role          Role      @default(USER)
  refreshToken  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?

  order Order[]
}

enum ProductCategory {
  ELECTRONICS
  CLOTHES
  FOOD
  BOOKS
  TOYS
  GAMES
  HEALTH
  BEAUTY
  HOME
}

model Product {
  id          String          @id @default(cuid())
  name        String
  image       String
  category    ProductCategory
  status      Boolean?        @default(true)
  description String
  price       Float
  createdAt   DateTime        @default(now())
  updatedAt   DateTime?       @updatedAt
  inventory   Inventory?
  orderItems  OrdenItem[]
}

enum OrderStatus {
  PENDING
  IN_PROGRESS
  SHIPPED
  DELIVERED
  CANCELLED
}

model Inventory {
  id        String  @id @default(cuid())
  quantity  Int     @default(0)
  productId String  @unique
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id         String      @id @default(cuid())
  date       DateTime    @default(now())
  totalPrice Float
  status     OrderStatus @default(PENDING)
  address    String
  comment    String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  ordenItems OrdenItem[]
  userId     String?
  user       User?       @relation(fields: [userId], references: [id])
}

model OrdenItem {
  id        String  @id @default(cuid())
  quantity  Int
  productId String
  product   Product @relation(fields: [productId], references: [id])
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
}
